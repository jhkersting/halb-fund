d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / 0.02
print(paste("Delta: ", delta))
# Find Gamma
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 0.5 * (d1 + d3)) / 0.01^2
print(paste("Gamma: ", gamma)
# Find Vega
d1 <- compound_option(s, x, t, rf, vol - 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
## Question 2
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.72
compound_option <- function(S, K, T, r, sigma, option_type, N, div_y, x2, t2, option_type2) {
delta_t <- T / N
N2 <- as.integer(t2 / T * N)
u <- exp(sigma * sqrt(delta_t))
d <- 1 / u
p <- (exp((r - div_y) * delta_t) - d) / (u - d)
q <- 1 - p
stock_price <- matrix(0, nrow = N + 1, ncol = N + 1)
option_price <- matrix(0, nrow = N + 1, ncol = N + 1)
compound_price <- matrix(0, nrow = N2 + 1, ncol = N2 + 1)
for (i in 0:N) {
for (j in 0:i) {
stock_price[j + 1, i + 1] <- S * (u^(i - j)) * (d^j)
}
}
if (option_type == "call") {
option_price[, N + 1] <- pmax(0, stock_price[, N + 1] - K)
} else {
option_price[, N + 1] <- pmax(0, K - stock_price[, N + 1])
}
for (i in N:1) {
for (j in 0:(i - 1)) {
option_price[j + 1, i] <- exp(-r * delta_t) * (p * option_price[j + 1, i + 1] + q * option_price[j + 2, i + 1])
}
}
# Restrict the matrix size to N2 + 1 for compound calculations
option_price <- option_price[1:(N2 + 1), 1:(N2 + 1)]
if (option_type2 == "call") {
compound_price[, N2 + 1] <- pmax(0, option_price[, N2 + 1] - x2)
} else {
compound_price[, N2 + 1] <- pmax(0, x2 - option_price[, N2 + 1])
}
for (i in N2:1) {
for (j in 0:(i - 1)) {
compound_price[j + 1, i] <- exp(-r * delta_t) * (p * compound_price[j + 1, i + 1] + q * compound_price[j + 2, i + 1])
}
}
return(compound_price[1, 1])
}
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
# Find Delta
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / 0.02
print(paste("Delta: ", delta))
# Find Gamma
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 0.5 * (d1 + d3)) / 0.01^2
# Find Vega
d1 <- compound_option(s, x, t, rf, vol - 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / 0.02
print(paste("Vega: ", vega))
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
print(paste("New Value of Compound using Derivatives: ", new_price))
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Actual New Value of Compound: ", new_val))
## Question 2
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.72
compound_option <- function(S, K, T, r, sigma, option_type, N, div_y, x2, t2, option_type2) {
delta_t <- T / N
N2 <- as.integer(t2 / T * N)
u <- exp(sigma * sqrt(delta_t))
d <- 1 / u
p <- (exp((r - div_y) * delta_t) - d) / (u - d)
q <- 1 - p
stock_price <- matrix(0, nrow = N + 1, ncol = N + 1)
option_price <- matrix(0, nrow = N + 1, ncol = N + 1)
compound_price <- matrix(0, nrow = N2 + 1, ncol = N2 + 1)
for (i in 0:N) {
for (j in 0:i) {
stock_price[j + 1, i + 1] <- S * (u^(i - j)) * (d^j)
}
}
if (option_type == "call") {
option_price[, N + 1] <- pmax(0, stock_price[, N + 1] - K)
} else {
option_price[, N + 1] <- pmax(0, K - stock_price[, N + 1])
}
for (i in N:1) {
for (j in 0:(i - 1)) {
option_price[j + 1, i] <- exp(-r * delta_t) * (p * option_price[j + 1, i + 1] + q * option_price[j + 2, i + 1])
}
}
# Restrict the matrix size to N2 + 1 for compound calculations
option_price <- option_price[1:(N2 + 1), 1:(N2 + 1)]
if (option_type2 == "call") {
compound_price[, N2 + 1] <- pmax(0, option_price[, N2 + 1] - x2)
} else {
compound_price[, N2 + 1] <- pmax(0, x2 - option_price[, N2 + 1])
}
for (i in N2:1) {
for (j in 0:(i - 1)) {
compound_price[j + 1, i] <- exp(-r * delta_t) * (p * compound_price[j + 1, i + 1] + q * compound_price[j + 2, i + 1])
}
}
return(compound_price[1, 1])
}
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
# Find Delta
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / 0.02
print(paste("Delta: ", delta))
# Find Gamma
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 0.5 * (d1 + d3)) / 0.01^2
print(paste("Gamma: ", gamma))
# Find Vega
d1 <- compound_option(s, x, t, rf, vol - 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / 0.02
print(paste("Vega: ", vega))
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
print(paste("New Value of Compound using Derivatives: ", new_price))
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Actual New Value of Compound: ", new_val))
## Question 2
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.72
compound_option <- function(S, K, T, r, sigma, option_type, N, div_y, x2, t2, option_type2) {
delta_t <- T / N
N2 <- as.integer(t2 / T * N)
u <- exp(sigma * sqrt(delta_t))
d <- 1 / u
p <- (exp((r - div_y) * delta_t) - d) / (u - d)
q <- 1 - p
stock_price <- matrix(0, nrow = N + 1, ncol = N + 1)
option_price <- matrix(0, nrow = N + 1, ncol = N + 1)
compound_price <- matrix(0, nrow = N2 + 1, ncol = N2 + 1)
for (i in 0:N) {
for (j in 0:i) {
stock_price[j + 1, i + 1] <- S * (u^(i - j)) * (d^j)
}
}
if (option_type == "call") {
option_price[, N + 1] <- pmax(0, stock_price[, N + 1] - K)
} else {
option_price[, N + 1] <- pmax(0, K - stock_price[, N + 1])
}
for (i in N:1) {
for (j in 0:(i - 1)) {
option_price[j + 1, i] <- exp(-r * delta_t) * (p * option_price[j + 1, i + 1] + q * option_price[j + 2, i + 1])
}
}
# Restrict the matrix size to N2 + 1 for compound calculations
option_price <- option_price[1:(N2 + 1), 1:(N2 + 1)]
if (option_type2 == "call") {
compound_price[, N2 + 1] <- pmax(0, option_price[, N2 + 1] - x2)
} else {
compound_price[, N2 + 1] <- pmax(0, x2 - option_price[, N2 + 1])
}
for (i in N2:1) {
for (j in 0:(i - 1)) {
compound_price[j + 1, i] <- exp(-r * delta_t) * (p * compound_price[j + 1, i + 1] + q * compound_price[j + 2, i + 1])
}
}
return(compound_price[1, 1])
}
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
# Find Delta
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / 0.02
# Find Gamma
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 0.5 * (d1 + d3)) / 0.01^2
# Find Vega
d1 <- compound_option(s, x, t, rf, vol - 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / 0.02
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
print(paste("Delta: ", delta))
print(paste("Gamma: ", gamma))
print(paste("Vega: ", vega))
print(paste("New Value of Compound using Derivatives: ", new_price))
print(paste("Actual New Value of Compound: ", new_val))
## Question 3
source("functions-3.R")
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.72
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
# Find Delta
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / 0.02
# Find Gamma
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 0.5 * (d1 + d3)) / 0.01^2
# Find Vega
d1 <- compound_option(s, x, t, rf, vol - 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / 0.02
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
print(paste("Delta: ", delta))
print(paste("Gamma: ", gamma))
print(paste("Vega: ", vega))
print(paste("New Value of Compound using Derivatives: ", new_price))
print(paste("Actual New Value of Compound: ", new_val))
## Question 3
source("functions-3.R")
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.75
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
# Find Delta
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / 0.02
# Find Gamma
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 0.5 * (d1 + d3)) / 0.01^2
# Find Vega
d1 <- compound_option(s, x, t, rf, vol - 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / 0.02
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
print(paste("Delta: ", delta))
print(paste("Gamma: ", gamma))
print(paste("Vega: ", vega))
print(paste("New Value of Compound using Derivatives: ", new_price))
print(paste("Actual New Value of Compound: ", new_val))
## Question 3
source("functions-3.R")
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.75
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
# Find Delta
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / 0.02
# Find Gamma
d1 <- compound_option(s - 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s + 0.01, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 0.5 * (d1 + d3)) / 0.01^2
# Find Vega
d1 <- compound_option(s, x, t, rf, vol - 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + 0.01, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / 0.02
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
print(paste("Delta: ", delta))
print(paste("Gamma: ", gamma))
print(paste("Vega: ", vega))
print(paste("New Value of Compound using Derivatives: ", new_price))
print(paste("Actual New Value of Compound: ", new_val))
## Question 3
source("functions-3.R")
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.75
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
# Find Delta
h = 0.01
d1 <- compound_option(s - h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / (2 * h)
# Find Gamma
d1 <- compound_option(s - h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 2 * d3 + d1) / h^2
# Find Vega
h = 0.0001
d1 <- compound_option(s, x, t, rf, vol - h, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + h, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / (2 * h)
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
print(paste("Delta: ", delta))
print(paste("Gamma: ", gamma))
print(paste("Vega: ", vega))
print(paste("New Value of Compound using Derivatives: ", new_price))
print(paste("Actual New Value of Compound: ", new_val))
## Question 3
source("functions-3.R")
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.75
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
# Find Delta
h = 0.01
d1 <- compound_option(s - h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / (2 * h)
# Find Gamma
d1 <- compound_option(s - h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 2 * d3 + d1) / h^2
# Find Vega
h = 0.0001
d1 <- compound_option(s, x, t, rf, vol - h, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + h, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / (2 * h)
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
print(paste("Delta: ", delta))
print(paste("Gamma: ", gamma))
print(paste("Vega: ", vega))
print(paste("New Value of Compound using Derivatives: ", new_price))
print(paste("Actual New Value of Compound: ", new_val))
source("~/Desktop/fi-520/question-3.R")
source("~/Desktop/fi-520/question-3.R")
## Question 3
source("functions-3.R")
s = 210
rf = 0.042
vol = 0.25
x = 190
t = 1.2
option_type = "put"
div_y = 0.02
compound_type = 'put'
compound_x = 15
compound_t = 0.75
val <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
# Find Delta
h = 0.01
d1 <- compound_option(s - h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
delta <- (d2 - d1) / (2 * h)
# Find Gamma
d1 <- compound_option(s - h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s + h, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
d3 <- compound_option(s, x, t, rf, vol, option_type, 300, div_y, compound_x, compound_t, compound_type)
gamma <- (d2 - 2 * d3 + d1) / h^2
# Find Vega
h = 0.0001
d1 <- compound_option(s, x, t, rf, vol - h, option_type, 300, div_y, compound_x, compound_t, compound_type)
d2 <- compound_option(s, x, t, rf, vol + h, option_type, 300, div_y, compound_x, compound_t, compound_type)
vega <- (d2 - d1) / (2 * h)
# Find new value of compound option
s_new = 220
vol_new = 0.27
# Use derivatives to find new value
delta_s <- s_new - s
delta_vol <- vol_new - vol
change <- delta_s * delta + delta_vol * vega + 0.5 * delta_s^2 * gamma
new_price <- val + change
# actual new value
new_val <- compound_option(s_new, x, t, rf, vol_new, option_type, 300, div_y, compound_x, compound_t, compound_type)
print(paste("Value of Compound: ", val))
print(paste("Delta: ", delta))
print(paste("Gamma: ", gamma))
print(paste("Vega: ", vega))
print(paste("New Value of Compound using Derivatives: ", new_price))
print(paste("Actual New Value of Compound: ", new_val))
source("~/Desktop/fi-520/functions-3.R")
